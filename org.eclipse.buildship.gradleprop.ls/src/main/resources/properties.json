[
  {
    "name": "org.gradle.caching",
    "description": "When set to true, Gradle will reuse task outputs from any previous build, when possible, resulting in much faster builds. Learn more about using the build cache. By default, the build cache is not enabled.",
    "values": [
      "true",
      "false"
    ]
  },
  {
    "name": "org.gradle.caching.debug",
    "description": "When set to true, individual input property hashes and the build cache key for each task are logged on the console. Learn more about task output caching. Default is false.",
    "values": [
      "true",
      "false"
    ]
  },
  {
    "name": "org.gradle.configureondemand",
    "description": "Enables incubating configuration on demand, where Gradle will attempt to configure only necessary projects. Default is false.",
    "values": [
      "true",
      "false"
    ]
  },
  {
    "name": "org.gradle.console",
    "description": "Customize console output coloring or verbosity. Default depends on how Gradle is invoked. See command-line logging for additional details.",
    "values": [
      "auto",
      "plain",
      "rich",
      "verbose"
    ]
  },
  {
    "name": "org.gradle.continuous.quietperiod",
    "description": "When using continuous build, Gradle will wait for the quiet period to pass before triggering another build. Any additional changes within this quiet period restart waiting for the quiet period. Default is 250 milliseconds.",
    "values": []
  },
  {
    "name": "org.gradle.daemon",
    "description": "When set to true the Gradle Daemon is used to run the build. Default is true, builds will be run using the daemon.",
    "values": [
      "true",
      "false"
    ]
  },
  {
    "name": "org.gradle.daemon.idletimeout",
    "description": "Gradle Daemon will terminate itself after specified number of idle milliseconds. Default is 10800000 (3 hours).",
    "values": []
  },
  {
    "name": "org.gradle.debug",
    "description": "When set to true, Gradle will run the build with remote debugging enabled, listening on port 5005. Note that this is the equivalent of adding -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 to the JVM command line and will suspend the virtual machine until a debugger is attached. Default is false.",
    "values": [
      "true",
      "false"
    ]
  },
  {
    "name": "org.gradle.debug.host",
    "description": "Specifies the host address to listen on or connect to when debug is enabled. In the server mode on Java 9 and above, passing * for the host will make the server listen on all network interfaces. By default, no host address is passed to JDWP, so on Java 9 and above, the loopback address is used, while earlier versions listen on all interfaces.",
    "values": []
  },
  {
    "name": "org.gradle.debug.port",
    "description": "Specifies the port number to listen on when debug is enabled. Default is 5005.",
    "values": []
  },
  {
    "name": "org.gradle.debug.server",
    "description": "If set to true and debugging is enabled, Gradle will run the build with the socket-attach mode of the debugger. Otherwise, the socket-listen mode is used. Default is true.",
    "values": [
      "true",
      "false"
    ]
  },
  {
    "name": "org.gradle.debug.suspend",
    "description": "When set to true and debugging is enabled, the JVM running Gradle will suspend until a debugger is attached. Default is true.",
    "values": [
      "true",
      "false"
    ]
  },
  {
    "name": "org.gradle.java.home",
    "description": "Specifies the Java home for the Gradle build process. The value can be set to either a jdk or jre location, however, depending on what your build does, using a JDK is safer. This does not affect the version of Java used to launch the Gradle client VM (see Environment variables). A reasonable default is derived from your environment (JAVA_HOME or the path to java) if the setting is unspecified.",
    "values": []
  },
  {
    "name": "org.gradle.jvmargs",
    "description": "Specifies the JVM arguments used for the Gradle Daemon. The setting is particularly useful for configuring JVM memory settings for build performance. This does not affect the JVM settings for the Gradle client VM. The default is -Xmx512m \"-XX:MaxMetaspaceSize=384m\".",
    "values": []
  },
  {
    "name": "org.gradle.logging.level",
    "description": "When set to quiet, warn, lifecycle, info, or debug, Gradle will use this log level. The values are not case sensitive. See Choosing a log level. The lifecycle level is the default.",
    "values": [
      "quiet",
      "warn",
      "lifecycle",
      "info",
      "debug"
    ]
  },
  {
    "name": "org.gradle.logging.stacktrace",
    "description": "Specifies whether stacktraces should be displayed as part of the build result upon an exception. See also the --stacktrace command-line option. When set to internal, a stacktrace is present in the output only in case of internal exceptions. When set to all or full, a stacktrace is present in the output for all exceptions and build failures. Using full doesnâ€™t truncate the stacktrace, which leads to a much more verbose output. Default is internal.",
    "values": [
      "internal",
      "all",
      "full"
    ]
  },
  {
    "name": "org.gradle.parallel",
    "description": "When configured, Gradle will fork up to org.gradle.workers.max JVMs to execute projects in parallel. To learn more about parallel task execution, see the section on Gradle build performance. Default is false.",
    "values": [
      "true",
      "false"
    ]
  },
  {
    "name": "org.gradle.priority",
    "description": "Specifies the scheduling priority for the Gradle daemon and all processes launched by it. See also performance command-line options. Default is normal.",
    "values": [
      "low",
      "normal"
    ]
  },
  {
    "name": "org.gradle.vfs.verbose",
    "description": "Configures verbose logging when watching the file system. Default is false.",
    "values": [
      "true",
      "false"
    ]
  },
  {
    "name": "org.gradle.vfs.watch",
    "description": "Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature.",
    "values": [
      "true",
      "false"
    ]
  },
  {
    "name": "org.gradle.warning.mode",
    "description": "When set to all, summary or none, Gradle will use different warning type display. See Command-line logging options for details. Default is summary.",
    "values": [
      "all",
      "fail",
      "summary",
      "none"
    ]
  },
  {
    "name": "org.gradle.welcome",
    "description": "Controls whether Gradle should print a welcome message. If set to never then the welcome message will be suppressed. If set to once then the message is printed once for each new version of Gradle. Default is once.",
    "values": [
      "never",
      "once"
    ]
  },
  {
    "name": "org.gradle.workers.max",
    "description": "When configured, Gradle will use a maximum of the given number of workers. See also performance command-line options. Default is number of CPU processors.",
    "values": []
  }
]
